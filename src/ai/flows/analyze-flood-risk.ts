// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview Flood risk analysis AI agent.
 *
 * - analyzeFloodRisk - A function that handles the flood risk analysis process.
 * - AnalyzeFloodRiskInput - The input type for the analyzeFloodRisk function.
 * - AnalyzeFloodRiskOutput - The return type for the analyzeFloodRisk function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';
import { getRealTimeWeather, type WeatherData } from '@/services/weather';

const AnalyzeFloodRiskInputSchema = z.object({
  area: z.string().describe('The area in Durban to analyze flood risk for.'),
});

export type AnalyzeFloodRiskInput = z.infer<typeof AnalyzeFloodRiskInputSchema>;

const AnalyzeFloodRiskOutputSchema = z.object({
  floodRiskLevel: z
    .enum(['LOW', 'MEDIUM', 'HIGH'])
    .describe('The flood risk level for the specified area.'),
  explanation: z
    .string()
    .describe('An explanation of why the flood risk level was assigned.'),
  recommendedActions: z
    .string()
    .describe('Recommended actions for residents based on the flood risk.'),
  weatherData: z.object({
    rainfall: z.number(),
    temperature: z.number(),
    humidity: z.number(),
    windSpeed: z.number(),
    windDirection: z.string(),
  }).describe('The weather data used for the analysis.'),
});

export type AnalyzeFloodRiskOutput = z.infer<typeof AnalyzeFloodRiskOutputSchema>;

const weatherTool = ai.defineTool(
    {
        name: 'getWeatherForArea',
        description: 'Gets the current weather conditions for a specified area in Durban.',
        inputSchema: z.object({ area: z.string() }),
        outputSchema: z.custom<WeatherData>(),
    },
    async (input) => await getRealTimeWeather(input.area)
);


export async function analyzeFloodRisk(input: AnalyzeFloodRiskInput): Promise<AnalyzeFloodRiskOutput> {
  return analyzeFloodRiskFlow(input);
}

const prompt = ai.definePrompt({
  name: 'analyzeFloodRiskPrompt',
  input: {schema: AnalyzeFloodRiskInputSchema},
  output: {schema: AnalyzeFloodRiskOutputSchema},
  tools: [weatherTool],
  prompt: `You are an expert in analyzing flood risks in Durban, South Africa.

You will receive an area in Durban. Your first step is to use the provided tool to get the current weather data for that area.
Once you have the weather data, you must assess the flood risk level (LOW, MEDIUM, HIGH).
Based on the risk level, provide an explanation and recommend actions for residents.

Area: {{{area}}}

Analyze the provided data and determine the flood risk level, explain your reasoning, and suggest actions for residents.
Also include the weather data you used in your final response.
`,
});

const analyzeFloodRiskFlow = ai.defineFlow(
  {
    name: 'analyzeFloodRiskFlow',
    inputSchema: AnalyzeFloodRiskInputSchema,
    outputSchema: AnalyzeFloodRiskOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
